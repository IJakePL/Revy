"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var markdown_to_text_1 = require("./markdown-to-text");
var emoji_1 = require("./emoji");
describe('emoji', function () {
    it('emoji', function () {
        expect(emoji_1.default).not.toHaveProperty(':smile:');
        expect(emoji_1.default).toHaveProperty('smile');
        expect(emoji_1.default).toHaveProperty('smiling_imp');
    });
    it('createMapMdToEmoji', function () {
        var _a;
        var before = 'x';
        var after = ':x:';
        expect(markdown_to_text_1.createMapMdToEmoji((_a = {}, _a[before] = true, _a))).toHaveProperty(after);
    });
    it('emojiMd', function () {
        expect(markdown_to_text_1.emojiMd).toHaveProperty(':smile:');
        expect(markdown_to_text_1.emojiMd).not.toHaveProperty('smile');
    });
    it('createRegExpTest', function () {
        var source = { 100: true, god: 'wow', '!': 'wow' };
        expect(markdown_to_text_1.createRegExpText(source)).toEqual(":(" + Object.keys(source).join('|') + "):");
    });
    it('textEmoji', function () {
        [
            {
                before: "hello i'm :smile: feeling :smiling_imp::smile:",
                after: "hello i'm \uD83D\uDE04 feeling \uD83D\uDE08\uD83D\uDE04"
            },
            {
                before: "hello i'm :smile: feeling :smiling_imp::smile:\n      hello i'm :smile: feeling :smiling_imp::smile:",
                after: "hello i'm \uD83D\uDE04 feeling \uD83D\uDE08\uD83D\uDE04\n      hello i'm \uD83D\uDE04 feeling \uD83D\uDE08\uD83D\uDE04"
            },
            {
                before: '',
                after: ''
            },
            {
                before: null,
                after: ''
            },
            {
                before: 4,
                after: '4'
            },
            {
                before: true,
                after: 'true'
            },
            {
                before: false,
                after: 'false'
            }
        ].map(function (_a) {
            var before = _a.before, after = _a.after;
            return expect(markdown_to_text_1.textEmoji(before)).toEqual(after);
        });
    });
});
